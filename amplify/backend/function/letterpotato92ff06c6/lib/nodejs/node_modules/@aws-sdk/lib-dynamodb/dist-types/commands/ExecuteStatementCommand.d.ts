import { ExecuteStatementCommand as __ExecuteStatementCommand, ExecuteStatementCommandInput as __ExecuteStatementCommandInput, ExecuteStatementCommandOutput as __ExecuteStatementCommandOutput } from "@aws-sdk/client-dynamodb";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MiddlewareStack } from "@aws-sdk/types";
import { NativeAttributeValue } from "@aws-sdk/util-dynamodb";
import { DynamoDBDocumentClientCommand } from "../baseCommand/DynamoDBDocumentClientCommand";
import { DynamoDBDocumentClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../DynamoDBDocumentClient";
export declare type ExecuteStatementCommandInput = Omit<__ExecuteStatementCommandInput, "Parameters"> & {
    Parameters?: NativeAttributeValue[];
};
export declare type ExecuteStatementCommandOutput = Omit<__ExecuteStatementCommandOutput, "Items" | "LastEvaluatedKey"> & {
    Items?: Record<string, NativeAttributeValue>[];
    LastEvaluatedKey?: Record<string, NativeAttributeValue>;
};
/**
 * Accepts native JavaScript types instead of `AttributeValue`s, and calls
 * ExecuteStatementCommand operation from {@link https://www.npmjs.com/package/@aws-sdk/client-dynamodb @aws-sdk/client-dynamodb}.
 *
 * JavaScript objects passed in as parameters are marshalled into `AttributeValue` shapes
 * required by Amazon DynamoDB. Responses from DynamoDB are unmarshalled into plain JavaScript objects.
 */
export declare class ExecuteStatementCommand extends DynamoDBDocumentClientCommand<ExecuteStatementCommandInput, ExecuteStatementCommandOutput, __ExecuteStatementCommandInput, __ExecuteStatementCommandOutput, DynamoDBDocumentClientResolvedConfig> {
    readonly input: ExecuteStatementCommandInput;
    protected readonly inputKeyNodes: {
        key: string;
    }[];
    protected readonly outputKeyNodes: {
        key: string;
    }[];
    protected readonly clientCommand: __ExecuteStatementCommand;
    readonly middlewareStack: MiddlewareStack<ExecuteStatementCommandInput | __ExecuteStatementCommandInput, ExecuteStatementCommandOutput | __ExecuteStatementCommandOutput>;
    constructor(input: ExecuteStatementCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DynamoDBDocumentClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ExecuteStatementCommandInput, ExecuteStatementCommandOutput>;
}
