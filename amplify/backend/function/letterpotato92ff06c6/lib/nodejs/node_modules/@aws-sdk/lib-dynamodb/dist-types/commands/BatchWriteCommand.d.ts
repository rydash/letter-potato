import { BatchWriteItemCommand as __BatchWriteItemCommand, BatchWriteItemCommandInput as __BatchWriteItemCommandInput, BatchWriteItemCommandOutput as __BatchWriteItemCommandOutput, DeleteRequest, ItemCollectionMetrics, PutRequest, WriteRequest } from "@aws-sdk/client-dynamodb";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MiddlewareStack } from "@aws-sdk/types";
import { NativeAttributeValue } from "@aws-sdk/util-dynamodb";
import { DynamoDBDocumentClientCommand } from "../baseCommand/DynamoDBDocumentClientCommand";
import { DynamoDBDocumentClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../DynamoDBDocumentClient";
export declare type BatchWriteCommandInput = Omit<__BatchWriteItemCommandInput, "RequestItems"> & {
    RequestItems: Record<string, (Omit<WriteRequest, "PutRequest" | "DeleteRequest"> & {
        PutRequest?: Omit<PutRequest, "Item"> & {
            Item: Record<string, NativeAttributeValue> | undefined;
        };
        DeleteRequest?: Omit<DeleteRequest, "Key"> & {
            Key: Record<string, NativeAttributeValue> | undefined;
        };
    })[]> | undefined;
};
export declare type BatchWriteCommandOutput = Omit<__BatchWriteItemCommandOutput, "UnprocessedItems" | "ItemCollectionMetrics"> & {
    UnprocessedItems?: Record<string, (Omit<WriteRequest, "PutRequest" | "DeleteRequest"> & {
        PutRequest?: Omit<PutRequest, "Item"> & {
            Item: Record<string, NativeAttributeValue> | undefined;
        };
        DeleteRequest?: Omit<DeleteRequest, "Key"> & {
            Key: Record<string, NativeAttributeValue> | undefined;
        };
    })[]>;
    ItemCollectionMetrics?: Record<string, (Omit<ItemCollectionMetrics, "ItemCollectionKey"> & {
        ItemCollectionKey?: Record<string, NativeAttributeValue>;
    })[]>;
};
/**
 * Accepts native JavaScript types instead of `AttributeValue`s, and calls
 * BatchWriteItemCommand operation from {@link https://www.npmjs.com/package/@aws-sdk/client-dynamodb @aws-sdk/client-dynamodb}.
 *
 * JavaScript objects passed in as parameters are marshalled into `AttributeValue` shapes
 * required by Amazon DynamoDB. Responses from DynamoDB are unmarshalled into plain JavaScript objects.
 */
export declare class BatchWriteCommand extends DynamoDBDocumentClientCommand<BatchWriteCommandInput, BatchWriteCommandOutput, __BatchWriteItemCommandInput, __BatchWriteItemCommandOutput, DynamoDBDocumentClientResolvedConfig> {
    readonly input: BatchWriteCommandInput;
    protected readonly inputKeyNodes: {
        key: string;
        children: {
            children: {
                key: string;
                children: {
                    key: string;
                }[];
            }[];
        };
    }[];
    protected readonly outputKeyNodes: ({
        key: string;
        children: {
            children: {
                key: string;
                children: {
                    key: string;
                }[];
            }[];
        };
    } | {
        key: string;
        children: {
            children: {
                key: string;
            }[];
        };
    })[];
    protected readonly clientCommand: __BatchWriteItemCommand;
    readonly middlewareStack: MiddlewareStack<BatchWriteCommandInput | __BatchWriteItemCommandInput, BatchWriteCommandOutput | __BatchWriteItemCommandOutput>;
    constructor(input: BatchWriteCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DynamoDBDocumentClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchWriteCommandInput, BatchWriteCommandOutput>;
}
