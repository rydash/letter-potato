import { ExpectedAttributeValue, ItemCollectionMetrics, PutItemCommand as __PutItemCommand, PutItemCommandInput as __PutItemCommandInput, PutItemCommandOutput as __PutItemCommandOutput } from "@aws-sdk/client-dynamodb";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MiddlewareStack } from "@aws-sdk/types";
import { NativeAttributeValue } from "@aws-sdk/util-dynamodb";
import { DynamoDBDocumentClientCommand } from "../baseCommand/DynamoDBDocumentClientCommand";
import { DynamoDBDocumentClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../DynamoDBDocumentClient";
export declare type PutCommandInput = Omit<__PutItemCommandInput, "Item" | "Expected" | "ExpressionAttributeValues"> & {
    Item: Record<string, NativeAttributeValue> | undefined;
    Expected?: Record<string, Omit<ExpectedAttributeValue, "Value" | "AttributeValueList"> & {
        Value?: NativeAttributeValue;
        AttributeValueList?: NativeAttributeValue[];
    }>;
    ExpressionAttributeValues?: Record<string, NativeAttributeValue>;
};
export declare type PutCommandOutput = Omit<__PutItemCommandOutput, "Attributes" | "ItemCollectionMetrics"> & {
    Attributes?: Record<string, NativeAttributeValue>;
    ItemCollectionMetrics?: Omit<ItemCollectionMetrics, "ItemCollectionKey"> & {
        ItemCollectionKey?: Record<string, NativeAttributeValue>;
    };
};
/**
 * Accepts native JavaScript types instead of `AttributeValue`s, and calls
 * PutItemCommand operation from {@link https://www.npmjs.com/package/@aws-sdk/client-dynamodb @aws-sdk/client-dynamodb}.
 *
 * JavaScript objects passed in as parameters are marshalled into `AttributeValue` shapes
 * required by Amazon DynamoDB. Responses from DynamoDB are unmarshalled into plain JavaScript objects.
 */
export declare class PutCommand extends DynamoDBDocumentClientCommand<PutCommandInput, PutCommandOutput, __PutItemCommandInput, __PutItemCommandOutput, DynamoDBDocumentClientResolvedConfig> {
    readonly input: PutCommandInput;
    protected readonly inputKeyNodes: ({
        key: string;
        children?: undefined;
    } | {
        key: string;
        children: {
            children: {
                key: string;
            }[];
        };
    })[];
    protected readonly outputKeyNodes: ({
        key: string;
        children?: undefined;
    } | {
        key: string;
        children: {
            key: string;
        }[];
    })[];
    protected readonly clientCommand: __PutItemCommand;
    readonly middlewareStack: MiddlewareStack<PutCommandInput | __PutItemCommandInput, PutCommandOutput | __PutItemCommandOutput>;
    constructor(input: PutCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DynamoDBDocumentClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutCommandInput, PutCommandOutput>;
}
